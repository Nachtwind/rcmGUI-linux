#!/usr/bin/env python
# -*- coding: UTF-8 -*-
#
# generated by wxGlade 0.8.0 on Sat Dec  1 13:45:05 2018
#

import wx
import glob
# begin wxGlade: dependencies
import gettext
# end wxGlade
import subprocess
from subprocess import PIPE, run
# begin wxGlade: extracode
# end wxGlade


class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = kwds.get("style", 0) | wx.CAPTION | wx.CLIP_CHILDREN | wx.CLOSE_BOX | wx.MINIMIZE_BOX | wx.SYSTEM_MENU
        wx.Frame.__init__(self, *args, **kwds)
        self.SetSize((400, 300))
        self.sb1 = self.CreateStatusBar(1)
        self.notebook_1 = wx.Notebook(self, wx.ID_ANY)
        self.notebook_1_ = wx.Panel(self.notebook_1, wx.ID_ANY)
        self.btnINJ = wx.Button(self.notebook_1_, wx.ID_ANY, _("Inject"))
        self.lstPL = wx.ListBox(self.notebook_1_, wx.ID_ANY)
        self.notebook_1_pane_1 = wx.Panel(self.notebook_1, wx.ID_ANY)

        self.__set_properties()
        self.__do_layout()

        self.Bind(wx.EVT_BUTTON, self.inj_start, self.btnINJ)
        # end wxGlade

        self.timer = wx.Timer(self)
        self.Bind(wx.EVT_TIMER, self.update, self.timer)
        self.timer.Start(1000)


        for(f) in glob.glob("./payloads/*.bin"):
            self.lstPL.Append( f.replace("./payloads/","") )


    def update(self, event):
        #ret = subprocess.call(["lsusb"])
        command = ['lsusb']
        result = run(command, stdout=PIPE, stderr=PIPE, universal_newlines=True)
        #print(result.stdout)
        #print(result.stdout.find("NVidia"))



        if result.stdout.find("NVidia") > -1:
            self.sb1.SetStatusText(  "NSW RCM :)", 0)
        else:
            self.sb1.SetStatusText(  "Keine NSW", 0)

        if result.stdout.find("Nintendo") > -1:
            self.sb1.SetStatusText(  "Laufende NSW", 0)

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle(_("rcmGUI - 0.0.1"))
        self.sb1.SetStatusWidths([-1])

        # statusbar fields
        sb1_fields = [_("Keine NSW")]
        for i in range(len(sb1_fields)):
            self.sb1.SetStatusText(sb1_fields[i], i)
        self.btnINJ.SetMinSize((155, 34))
        self.notebook_1_pane_1.Enable(False)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wx.BoxSizer(wx.VERTICAL)
        grid_sizer_1 = wx.GridSizer(0, 2, 0, 0)
        sizer_2 = wx.BoxSizer(wx.VERTICAL)
        sizer_2.Add(self.btnINJ, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.EXPAND, 0)
        sizer_2.Add((0, 0), 0, 0, 0)
        sizer_2.Add((0, 0), 0, 0, 0)
        sizer_2.Add((0, 0), 0, 0, 0)
        grid_sizer_1.Add(sizer_2, 1, wx.EXPAND, 0)
        grid_sizer_1.Add(self.lstPL, 0, wx.EXPAND, 0)
        self.notebook_1_.SetSizer(grid_sizer_1)
        self.notebook_1.AddPage(self.notebook_1_, _("RCM"))
        self.notebook_1.AddPage(self.notebook_1_pane_1, _("Settings"))
        sizer_1.Add(self.notebook_1, 1, wx.EXPAND, 0)
        self.SetSizer(sizer_1)
        self.Layout()
        # end wxGlade

    def inj_start(self, event):  # wxGlade: MyFrame.<event_handler>
    #fusee launcher suchen
        start = False;
        for(f) in glob.glob("./fusee-launcher/*.py"):
            if  f.replace("./fusee-launcher/","") == "fusee-launcher.py":
                start = True

        if start == True:
            try:
                #print (  ''.join(["./payloads/" ,  self.lstPL.GetString(self.lstPL.GetSelection() )]))
                command = ['python3','../fusee-launcher/fusee-launcher.py', 'ReiNX.bin']
                run(command, stdout=PIPE, stderr=PIPE, universal_newlines=True)
                wx.MessageBox(message="Payload gesendet.",
                              caption='Infoo',
                              style=wx.OK | wx.ICON_INFORMATION)
            except:
                print ("Error")
        else:
            wx.MessageBox(message="Fusee-launcher fehlt. Bitte im entsprechenden Unterordner installieren.",
                          caption='Fehler',
                          style=wx.OK | wx.ICON_ERROR)
            print ("FL fehlt")
        event.Skip()

# end of class MyFrame

class gladeapp(wx.App):
    def OnInit(self):
        self.frame = MyFrame(None, wx.ID_ANY, "")
        self.SetTopWindow(self.frame)
        self.frame.Show()
        return True

# end of class gladeapp

if __name__ == "__main__":
    gettext.install("rcminjector") # replace with the appropriate catalog name

    rcminjector = gladeapp(0)
    rcminjector.MainLoop()
